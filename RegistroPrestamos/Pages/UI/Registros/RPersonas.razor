@page "/RPersonas"

@using RegistroPrestamos.Models
@using RegistroPrestamos.BLL

@inject IToastService toast

<EditForm Model="Persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card" style="align-self:self-start">
        <div class="card-header">
            <h3>Registro de Personas</h3>
        </div>
        <div class="card-body" style="align-self:self-start">
            <form>
                @*PersonaId*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Persona Id</strong></label>
                            <div class="input-group">
                                <hr />
                                <InputNumber @bind-Value="Persona.PersonaId" class=" form-control col-5" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-toolbar input-group-text" @onclick="Buscar"><span class="oi oi-magnifying-glass"></span>Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />

                @*Nombre*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Nombre</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputText @bind-Value="Persona.Nombre" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <hr />

                @*Telefono*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Telefono</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputText @bind-Value="Persona.Telefono" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                @*Cedula*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Cédula</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputText required minlength="11" maxlength="11" @bind-Value="Persona.Cedula" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                @*Direccion*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Dirección</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputText @bind-Value="Persona.Direccion" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                @*FechaNacimiento*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Fecha Nacimiento</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputDate @bind-Value="Persona.FechaNacimiento" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                @*Balance*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Balance</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputNumber readonly @bind-Value="Balance" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <br />
                <br />
                @*Botones*@
                <div class="card-footer">
                    <div class="form-inline text-center" display: inline-blocks>
                        <button type="button" class="btn btn-outline-dark" @onclick="Nuevo"><span class="oi oi-file"></span>Nuevo</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-outline-dark" @onclick="Guardar"><span class="oi oi-hard-drive"></span>Guardar</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-outline-dark" @onclick="Eliminar"><span class="oi oi-delete"></span>Eliminar</button>
                    </div>

                </div>
            </form>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int PersonaId { get; set; }

    private Personas Persona { get; set; }

    public double Balance { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        Persona = new Personas();
        Balance = 0;
        PersonaId = 0;
    }

    public void Buscar()
    {
        if (Persona.PersonaId > 0)
        {
            var encontrado = PersonasBLL.Buscar(Persona.PersonaId);
            var prestamos = PrestamosBLL.GetList(pres => pres.PersonaId == Persona.PersonaId);
            if (encontrado != null)
            {
                this.Persona = encontrado;
                if (prestamos.Count > 0)
                {
                    foreach (Prestamos prestamo in prestamos)
                    {
                        this.Balance += prestamo.Balance;
                    }
                }
                else
                {
                    this.Balance = 0;
                }
            }
            else
            {
                toast.ShowWarning("No Encontrado");
            }
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = PersonasBLL.Guardar(Persona);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo guardar.");
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(Persona.PersonaId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo eliminar.");
        }
    }
}
