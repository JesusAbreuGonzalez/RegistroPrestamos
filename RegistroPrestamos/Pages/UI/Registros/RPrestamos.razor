@page "/RPrestamos"

@using RegistroPrestamos.Models
@using RegistroPrestamos.BLL

@inject IToastService toast

<EditForm Model="Prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card" style="align-self:self-start">
        <div class="card-header">
            <h3>Registro de Prestamos</h3>
        </div>
        <div class="card-body" style="align-self:self-start">
            <form>
                @*PrestamoId*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Prestamo Id</strong></label>
                            <div class="input-group">
                                <hr />
                                <InputNumber @bind-Value="Prestamo.PrestamoId" class="form-control col-5" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-toolbar input-group-text" @onclick="Buscar"><span class="oi oi-magnifying-glass"></span>Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />

                @*PersonaId*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Persona Id</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputSelect class="form-control w-100 pl-1" @bind-Value="Prestamo.PersonaId">

                                    <option value="0">Selecciona una persona</option>

                                    @foreach (var persona in PersonasBLL.GetList(per => true))
                                    {
                                        <option value="@persona.PersonaId">@persona.Cedula >>> @persona.Nombre</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />

                @*Concepto*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Concepto</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputText @bind-Value="Prestamo.Concepto" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <hr />

                @*Monto*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Monto</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputNumber @bind-Value="Prestamo.Monto" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                @*Balance*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Balance</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputNumber readonly @bind-Value="Prestamo.Balance" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                @*Fecha Creacion*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Fecha Creación</strong></label>
                            <hr />
                            <div class="input-group">
                                <InputDate @bind-Value="Prestamo.FechaCreacion" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <br />
                <br />
                @*Botones*@
                <div class="card-footer">
                    <div class="form-inline text-center" display: inline-blocks>
                        <button type="button" class="btn btn-outline-dark" @onclick="Nuevo"><span class="oi oi-file"></span>Nuevo</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-outline-dark" @onclick="Guardar"><span class="oi oi-hard-drive"></span>Guardar</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-outline-dark" @onclick="Eliminar"><span class="oi oi-delete"></span>Eliminar</button>
                    </div>

                </div>
            </form>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int PrestamoId { get; set; }

    private Prestamos Prestamo = new Prestamos();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar(); //Sólo funciona si se pasa un id por parametro
    }

    public void Nuevo()
    {
        Prestamo = new Prestamos();
    }

    private void Buscar()
    {
        if (Prestamo.PrestamoId > 0)
        {
            var encontrado = PrestamosBLL.Buscar(Prestamo.PrestamoId);
            Nuevo();
            if (encontrado != null)
                this.Prestamo = encontrado;
            else
                toast.ShowWarning("No se ha encontrado el id: " + Prestamo.PrestamoId);

        }
    }

    public void Guardar()
    {
        var guardado = PrestamosBLL.Guardar(Prestamo);

        if (guardado)
        {
            Nuevo();
            toast.ShowSuccess("Se ha guardado correctamente");
        }
        else
        {
            toast.ShowError("No ha sido posible guardar");
        }

    }

    public void Eliminar()
    {
        bool eliminado;

        eliminado = PrestamosBLL.Eliminar(Prestamo.PrestamoId);

        if (eliminado)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado corectamente");
        }
        else
            toast.ShowError("No fue posible eliminar");

    }
}
